
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 * If you're looking for something you can import in the client-side of your application, please refer to the `browser.ts` file instead.
 * 
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'
import { fileURLToPath } from 'node:url'
globalThis['__dirname'] = path.dirname(fileURLToPath(import.meta.url))

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums"
import * as $Class from "./internal/class"
import * as Prisma from "./internal/prismaNamespace"

export * as $Enums from './enums'
export * from "./enums"
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more DBAlbums
 * const dBAlbums = await prisma.dBAlbum.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<LogOpts extends Prisma.LogLevel = never, OmitOpts extends Prisma.PrismaClientOptions["omit"] = Prisma.PrismaClientOptions["omit"], ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<LogOpts, OmitOpts, ExtArgs>
export { Prisma }


// file annotations for bundling tools to include these files
path.join(__dirname, "libquery_engine-darwin.dylib.node")
path.join(process.cwd(), "db/generated/prisma/libquery_engine-darwin.dylib.node")

/**
 * Model DBAlbum
 * *
 *  * Album
 */
export type DBAlbum = Prisma.DBAlbumModel
/**
 * Model DBArtist
 * *
 *  * Artist
 */
export type DBArtist = Prisma.DBArtistModel
/**
 * Model DBGenre
 * *
 *  * Genres
 */
export type DBGenre = Prisma.DBGenreModel
/**
 * Model DBArtistImg
 * *
 *  * Images
 */
export type DBArtistImg = Prisma.DBArtistImgModel
/**
 * Model DBAlbumImg
 * 
 */
export type DBAlbumImg = Prisma.DBAlbumImgModel
/**
 * Model DBTrack
 * *
 *  * Track
 */
export type DBTrack = Prisma.DBTrackModel
/**
 * Model DBUser
 * 
 */
export type DBUser = Prisma.DBUserModel
/**
 * Model DBCommunityUser
 * 
 */
export type DBCommunityUser = Prisma.DBCommunityUserModel
/**
 * Model DBCommunity
 * 
 */
export type DBCommunity = Prisma.DBCommunityModel
/**
 * Model DBAccount
 * 
 */
export type DBAccount = Prisma.DBAccountModel
/**
 * Model DBSorting
 * 
 */
export type DBSorting = Prisma.DBSortingModel
/**
 * Model User
 * 
 */
export type User = Prisma.UserModel
/**
 * Model Session
 * 
 */
export type Session = Prisma.SessionModel
/**
 * Model Account
 * 
 */
export type Account = Prisma.AccountModel
/**
 * Model Verification
 * 
 */
export type Verification = Prisma.VerificationModel
